#!/bin/bash
#
# ENVIRONMENT SPECIFIC SETTINGS
#
# User specific lines denoted with "###"
#-----------------------------------------------
# SYSTEM - MAHTI - SUPERCOMPUTER
#-----------------------------------------------
# Number of cores per node
SYS_CPUSPERNODE=128

# Mahti nodes are not shared for jobs, reserve full nodes (rounded up) 
# if CPUs given
if [ ! -z $CPUSTOT ]; then
    NNODES=1
    cpus=$CPUSTOT
    while [ false ]; do
	cpus=$(($cpus - $SYS_CPUSPERNODE))
	if [ $cpus -le 0 ]; then
	    break
	else
	    NNODES=$(($NNODES+1))
	fi
    done
else # Calc CPUS for EXPTIME
    CPUSTOT=$(echo "$NNODES * $SYS_CPUSPERNODE" | bc)
fi
export CPUSTOT

# Path structure
OEPS=/scratch/project_2001011/$USER/openEPS ###
test -d $OEPS || mkdir -p $OEPS
WORK=$OEPS/${EXPL}_mahti
SCRI=$WORK/scripts
DATA=$WORK/data
SRC=$WORK/configs
export WORK SCRI DATA SRC

# Estimate bulk job time if TIMEFORMODEL given instead of EXPTIME
if [ -z $EXPTIME ]; then
    mandtg=$WORK/mandtg

    totperday=$(echo "$TIMEFORMODEL * $ENS" | bc)
    totdays=$($mandtg $EDATE - $SDATE)
    totdays=$(echo "$totdays / $DSTEP + 1" | bc)
    totmins=$(echo "$totperday * $totdays" | bc)
    parallels=$(echo "$CPUSTOT / $CPUSPERMODEL" | bc)
    tottime=$(echo "$totmins / $parallels" | bc)

    modul=$(printf '%02d' $(($tottime % 60)))
    EXPTIME=$(echo "$tottime / 60" | bc)":$modul:00"
fi
export EXPTIME

# Match batchjob queue with requested resources
# test     -  1h      1-2 nodes
# medium   -  36h     1-20 nodes
# large    -  36h     21-200 nodes
# gc       - 36h      1-700 node

if [ -z $BATCHQUEUE ]; then
    if [ $NNODES -le 2 && $EXPTIME -le 1 ]; then
	BATCHQUEUE=test
    else
	BATCHQUEUE=medium
    fi
fi

# Define program for model parallel execution
#
launcher="srun --exclusive -n $CPUSPERMODEL --mem-per-cpu=1500M"
export launcher


# Batch job specification
# If unspecified or false, run on local resources
SEND_AS_SINGLEJOB="true" # send whole main.bash to queue
SEND_AS_MULTIJOB="false"   # only send run.bash to queue
line1="#SBATCH -p $BATCHQUEUE"       # batchjob queue
line2="#SBATCH -J $EXPS"             # name
line3="#SBATCH -t $EXPTIME"          # time reservation
line4="#SBATCH -N $NNODES"	     # number of nodes
line5='#SBATCH --account=project_2001011'   # project id 		###
line6='#SBATCH --ntasks-per-node=128'
line7='#SBATCH -o out'               # where to write output 
line8='#SBATCH -e err'               # where to write error

# Load modules
module load perl fftw openblas netcdf-c netcdf-fortran eccodes cdo

#-----------------------------------------------
# MODEL SPECIFIC DIRS AND SETTINGS
#-----------------------------------------------
# Default model version
if [ -z $OIFSv ]; then
    OIFSv=43r3v1
else
    if [ $OIFSv == "38r1v04" || $OIFSv == "40r1v2" ]; then
	echo "OIFS version $OIFSv NOT supported in this env, using default instead"
	OIFSv=43r3v1
    fi
fi
export OIFSv

# Default model path
if [ -z $MODEL_EXE ]; then
    MODEL_EXE=/projappl/project_2001271/OpenIFS/gcc_9.3.0/cy43r3v1/master.exe ###
fi

# Paths for model auxiliaries
ECCODES_SAMPLES_PATH=/MEMFS/ifs_samples/grib1_mlgrib2:/MEMFS/samples

# Initial states
INIBASEDIR=/scratch/project_2001271/OIFS_INI ###

# Other climate files needed by OpenIFS
IFSDATA=/projappl/project_2001271/openifs_climate_data ###

export MODEL_EXE
export INIBASEDIR IFSDATA IFSDATA2 ECCODES_SAMPLES_PATH
export LD_LIBRARY_PATH

# Increase stack memory (model may crash with SEGV otherwise)
ulimit -s unlimited

# Grib-tools needed
export GRIBTOOLS=$ECCODES_INSTALL_ROOT/bin

# --------------------------------------------------------------
# REQUIRED DIRS AND SCRIPTS
# --------------------------------------------------------------
# Model structure and programs that are needed
REQUIRE_NAMEL="namelist_general.bash namelist_${OIFSv}.bash"

# --------------------------------------------------------------
# TESTING
# --------------------------------------------------------------
# Vital paths that must exist
REQUIRE_PATHS="$REQUIRE_PATHS MODEL_EXE INIBASEDIR IFSDATA GRIB_SAMPLES_PATH"

# Vital variables that must exist	
REQUIRE_VARS="$REQUIRE_VARS WORK SCRI DATA SRC OMP_NUM_THREADS DR_HOOK"
